basic := #import "std/basic.lang"

TestStruct :: struct {
    field := 10;
}

init_window :: proc(w: int, h: int, title: string) {
    buffer := basic.c_string(title);
    _init_window(w, h, buffer);
    basic.free(buffer);
}

_init_window :: proc(w: int, h: int, title: ^u8) #foreign "InitWindow": Raylib
get_frame_time :: proc() -> float #foreign "GetFrameTime": Raylib
window_should_close :: proc() -> bool #foreign "WindowShouldClose": Raylib
close_window :: proc() #foreign "CloseWindow": Raylib
set_target_fps :: proc(t: int) #foreign "SetTargetFPS": Raylib
clear_background :: proc(c: Color) #foreign "ClearBackground": Raylib
begin_drawing :: proc() #foreign "BeginDrawing": Raylib
end_drawing :: proc() #foreign "EndDrawing": Raylib
draw_circle :: proc(centerX: int, centerY: int, radius: float, color: Color) #foreign "DrawCircle": Raylib

IsKeyPressed :: proc(key: int) -> bool #foreign: Raylib
IsKeyDown    :: proc(key: int) -> bool #foreign: Raylib

Color :: struct {
    r: u8
    g: u8
    b: u8
    a: u8
}

Red :: proc() -> Color {
    c: Color
    c.r = 230
    c.g = 41
    c.b = 55
    c.a = 255
    return c
}
White :: proc() -> Color {
    c: Color
    c.r = 255
    c.g = 255
    c.b = 255
    c.a = 255
    return c
}

Raylib :: #static_library "raylib"
_      :: #static_library "m"
_      :: #static_library "pthread"
_      :: #static_library "dl"
