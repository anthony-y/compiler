type Whatever: ^^^bool;
type a: struct {my_s: string};
type Fun: struct {
    big_number: u64;
    string_ptr: ^string;
    my_a: a;
}

proc value(){}

// TODO dump argument decls into block scope
proc test(xyz: ^string): Whatever {
    z := true;
    x := have_fun()
    z = false;
    w : ^bool = ^z;
    return ^^w;
}

proc have_fun(): Fun {
    f: Fun;
    f.big_number = 10;
    sum_string: string = "Hi";
    f.string_ptr = ^sum_string;
    f.my_a.my_s = "";
    a: ^string = f.string_ptr;
    return f;
}

proc main() {
    f: Fun;
    my_string: string;
    f.string_ptr = ^my_string;
    val : Whatever = test(f.string_ptr);
    // boolean : bool = value;
}
