type Test: struct {
    fields: Field;
}

proc whatever(): Field {
    my_fields: Field;
    my_fields.name = 10
    return my_fields
}

proc main(args: []string): int {
    args[10] = ""
    return 10;
}

type Field: struct {
    name: ^Field;
}

// TODO
// for modules, could just load all the symbols from the files into
// memory and then generate an imports struct with all the variables and function pointers inside.

// os := import "operatingsystem"
// i := os.args
// Behind the scenes
// type os: struct {
//   args := 12 // const eval'd value   
// }
