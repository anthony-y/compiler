// proc main(args: []string): int {
//     args[10] = ""
//     return args[10];
// }

proc whatever() {
    f: Field;
    f.name = null; // TODO fix
    return f // TODO its void but doesnt complain
}

type Field: struct {
    name: ^Field;
}

// TODO
// for modules, could just load all the symbols from the files into
// memory and then generate an imports struct with all the variables and function pointers inside.

// os := import "operatingsystem"
// i := os.args
// Behind the scenes
// type os: struct {
//   args := 12 // const eval'd value   
// }
