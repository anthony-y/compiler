proc main(args: []string): string {
    args[10] = ""
    return args[10]
}

proc whatever(): Field {
    f: Field
    f.name = null
    return f
}

type Field: struct {
    name: ^Field
}

// TODO
// for modules, could just load all the symbols from the files into
// memory and then generate an imports struct with all the variables and function pointers inside.

// os := import "operatingsystem"
// i := os.args
// Behind the scenes
// type os: struct {
//   args := 12 // const eval'd value
// }
