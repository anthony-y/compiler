#import "std/basic.lang"

type Arena: struct {
	fixed    : bool;
	cursor   : int //= 0;
	capacity : int;
	mem: ^u8;
}

proc arena_init(a: ^Arena) {
	a.mem = alloc(a.capacity);
	a.fixed = false;
	a.cursor = 0;
	a.capacity = 1024;
}

proc arena_alloc(a: ^Arena, size: u64): ^u8 {
	if !arena_maybe_grow(a, size) then return null;
	ret := a.mem + a.cursor;
	a.cursor += size;
	return ret;
}

proc arena_maybe_grow(a: ^Arena, desired_size: u64): bool {
	if a.fixed {
		puts("Out of space :(".data);
		return false;
	}

	if (a.cursor + desired_size) > a.capacity {
		a.capacity *= 2;
		a.mem = realloc(a.mem, a.capacity);
	}

	return true;
}
